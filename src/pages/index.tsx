import Head from "next/head";

import { v4 as uuid } from "uuid";

import { useEffect, useState } from "react";
import useSocket from "@/hooks/useSocket";
//import useLocalStorage from "@/hooks/useLocalStorage";
import { useLocalStorage } from "@/hooks/useLocalStorage";

import type { PanicInfo } from "@/types/interfaces";
import PanicItem from "@/components/PanicItem";

export default function Home() {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);

  const [panics, setPanics] = useLocalStorage<PanicInfo[]>("received-panics", []);

  const [seenPanics, setSeenPanics] = useLocalStorage<number[]>(
    "seen-panics",
    []
  );

  const socket = useSocket();
  useEffect(() => {
    if (socket) {
      socket.on("connect", () => {
        console.log("Connected");
      });

      socket.on("new-panic", (panic: PanicInfo) => {
        setPanics((st) => [panic, ...st]);
      });

      return () => {
        socket.off("connect");
        socket.off("new-panic");
      };
    }
  }, [socket]);

  const handleSee = (id: number) => {
    setSeenPanics((st) => [...st!, id]);
  };

  return (
    <>
      <Head>
        <title>Painel de OcorrÃªncias</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-1 flex-wrap items-baseline justify-around gap-4 py-8">
        {isClient && panics.length > 0 && panics.filter((panic) => !seenPanics.includes(panic.id))
          .map((panic) => (
            <PanicItem key={uuid()} panic={panic} handleSee={handleSee} />
          ))}
      </div>
    </>
  );
}
